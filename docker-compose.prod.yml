
services:

  market_data_microservice:
    image: market_data_microservice:latest
    build:
      context: ./MarketDataMicroservice
      dockerfile: Dockerfile
    ports:
      - "8088:8088"
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker


  auth_microservice:
    image: auth_microservice:latest
    build:
      context: ./AuthMicroservice
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  email_notification_microservice:
    image: email_notification_microservice:latest
    build:
      context: ./EmailNotificationMicroservice
      dockerfile: Dockerfile
    ports:
      - "8089:8089"
    depends_on:
      - kafka-1
      - kafka-2
      - kafka-3
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  portfolio_microservice:
    image: portfolio_microservice:latest
    build:
      context: ./PortfolioMicroservice
      dockerfile: Dockerfile
    ports:
      - "8087:8087"
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  report_microservice:
    image: report_microservice:latest
    build:
      context: ./ReportMicroservice
      dockerfile: Dockerfile
    ports:
      - "8033:8033"
    depends_on:
      - postgres
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  scheduler_microservice:
    image: scheduler_microservice:latest
    build:
      context: ./SchedulerMicroservice
      dockerfile: Dockerfile
    ports:
      - "8034:8034"
    depends_on:
      - postgres
      - kafka-1
      - kafka-2
      - kafka-3
    env_file:
      - .env
    environment:
      - SPRING_PROFILES_ACTIVE=docker


  postgres:
    image: 'postgres:14.3-alpine'
    container_name: 'java-postgres'
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}


  kafka-1:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=${KAFKA_KRAFT_CLUSTER_ID}
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9091,2@kafka-2:9091,3@kafka-3:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9090,EXTERNAL://${KAFKA_HOSTNAME:-localhost}:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - c:/kafka/temp/docker-compose/volumes/server-1/:/bitnami/kafka

  kafka-2:
    image: bitnami/kafka:latest
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_KRAFT_CLUSTER_ID=${KAFKA_KRAFT_CLUSTER_ID}
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9091,2@kafka-2:9091,3@kafka-3:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9090,EXTERNAL://${KAFKA_HOSTNAME:-localhost}:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - c:/kafka/temp/docker-compose/volumes/server-2/:/bitnami/kafka

  kafka-3:
    image: bitnami/kafka:latest
    ports:
      - "9096:9096"
    environment:
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_KRAFT_CLUSTER_ID=${KAFKA_KRAFT_CLUSTER_ID}
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9091,2@kafka-2:9091,3@kafka-3:9091
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9090,CONTROLLER://:9091,EXTERNAL://:9096
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-3:9090,EXTERNAL://${KAFKA_HOSTNAME:-localhost}:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    volumes:
      - c:/kafka/temp/docker-compose/volumes/server-3/:/bitnami/kafka

  redis:
    image: redis:7.2-rc-alpine
    restart: always
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - cache:/data

volumes:
  cache:  # создаем том для хранения данных Redis
   driver: local


